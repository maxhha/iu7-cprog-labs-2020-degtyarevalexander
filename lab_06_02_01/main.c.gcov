        -:    0:Source:main.c
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:#include "common.h"
        -:    5:#include "io.h"
        -:    6:#include "process.h"
        -:    7:
       18:    8:int main(int argc, char const *argv[])
        -:    9:{
       18:   10:    if (argc < 2 || argc > 3)
        -:   11:    {
        2:   12:        return EXIT_FAILURE;
        -:   13:    }
       16:   14:    const char *filename = argv[1];
       16:   15:    const char *prefix = argc < 3 ? NULL : argv[2];
        -:   16:
       16:   17:    FILE *f = fopen(filename, "r");
        -:   18:
       16:   19:    if (f == NULL)
        -:   20:    {
        1:   21:        return EXIT_FAILURE;
        -:   22:    }
        -:   23:
        -:   24:    t_object objects[MAX_OBJECTS];
       15:   25:    int objects_n = 0;
        -:   26:
       15:   27:    if (read_objects_from_file(f, objects, &objects_n) != OK)
        -:   28:    {
        8:   29:        fclose(f);
        8:   30:        return EXIT_FAILURE;
        -:   31:    }
        7:   32:    fclose(f);
        -:   33:
        7:   34:    if (objects_n == 0)
        -:   35:    {
        1:   36:        return EXIT_FAILURE;
        -:   37:    }
        -:   38:
        6:   39:    if (prefix == NULL)
        -:   40:    {
        3:   41:        qsort(objects, objects_n, sizeof(*objects), compare_objects_by_density);
        3:   42:        print_objects(objects, objects_n);
        -:   43:    }
        3:   44:    else if (strcmp(prefix, "ALL") == 0)
        -:   45:    {
        1:   46:        print_objects(objects, objects_n);
        -:   47:    }
        -:   48:    else
        -:   49:    {
        2:   50:        objects_n = filter_objects_by_name(objects, objects_n, argv[2]);
        2:   51:        if (objects_n == 0)
        -:   52:        {
        1:   53:            return EXIT_FAILURE;
        -:   54:        }
        1:   55:        print_objects(objects, objects_n);
        -:   56:    }
        -:   57:
        5:   58:    return EXIT_SUCCESS;
        -:   59:}
