        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <math.h>
        -:    3:
        -:    4:#define OK 0
        -:    5:#define INPUT_ERR 1
        -:    6:
        1:    7:double calc_func_as_series(double x, double eps)
        -:    8:{
        1:    9:    double res = 0;
        1:   10:    double t = 1;
        1:   11:    long int n = 1;
        -:   12:
        9:   13:    while (fabs(t) > eps)
        -:   14:    {
        7:   15:        res += t;
        -:   16:
        7:   17:        t = -t / n * (n + 2) * x;
        -:   18:
        7:   19:        n += 1;
        -:   20:    }
        -:   21:
        1:   22:    return res;
        -:   23:}
        -:   24:
        2:   25:int main()
        -:   26:{
        -:   27:    double x, eps;
        -:   28:    double f, s;
        -:   29:    double err;
        -:   30:
        2:   31:    printf("x, eps:\n");
        -:   32:
        2:   33:    if (scanf("%lf %lf", &x, &eps) != 2 || fabs(x) >= 1 || eps <= 0 || eps >= 1)
        -:   34:    {
        1:   35:        printf("no no no\n");
        1:   36:        return INPUT_ERR;
        -:   37:    }
        1:   38:    s = calc_func_as_series(x, eps);
        1:   39:    f = exp(-3 * log(1 + x));
        1:   40:    err = fabs(f - s);
        -:   41:
        1:   42:    printf("s(x): %.6lf\nf(x): %.6lf\n", s, f);
        1:   43:    printf("Absolute error: %.6lf\n", err);
        1:   44:    printf("Relative error: %.6lf\n", fabs(err / f));
        -:   45:
        1:   46:    return OK;
        -:   47:}
