        -:    0:Source:sort_template.c
        -:    1:#include <string.h>
        -:    2:#include "common.h"
        -:    3:#include <stdio.h>
        -:    4:
        -:    5:/* Params:
        -:    6: *   TYPE - file / array
        -:    7: *   IN_TYPE - FILE * / struct Student *
        -:    8:**/
        -:    9:
        -:   10:#ifdef TYPE
        -:   11:#ifdef IN_TYPE
        -:   12:
        -:   13:#include "templates.h"
        -:   14:
        8:   15:void TEMPLATE(sort, TYPE) (IN_TYPE students, int n)
        -:   16:{
        -:   17:    struct Student a, b;
       18:   18:    for (int i = 1; i < n; i++)
        -:   19:    {
       24:   20:        for (int j = 0; j < n - i; j++)
        -:   21:        {
       14:   22:            a = TEMPLATE(get_from, TYPE) (students, j);
       14:   23:            b = TEMPLATE(get_from, TYPE) (students, j + 1);
        -:   24:
       14:   25:            int w1 = strcmp(a.last_name, b.last_name);
       14:   26:            int w2 = strcmp(a.first_name, b.first_name);
        -:   27:
       14:   28:            if (w1 > 0 || (w1 == 0 && w2 > 0))
        -:   29:            {
        6:   30:                TEMPLATE(set_in, TYPE) (students, a, j + 1);
        6:   31:                TEMPLATE(set_in, TYPE) (students, b, j);
        -:   32:            }
        -:   33:        }
        -:   34:    }
        8:   35:}
------------------
sort_file:
        4:   15:void TEMPLATE(sort, TYPE) (IN_TYPE students, int n)
        -:   16:{
        -:   17:    struct Student a, b;
        9:   18:    for (int i = 1; i < n; i++)
        -:   19:    {
       12:   20:        for (int j = 0; j < n - i; j++)
        -:   21:        {
        7:   22:            a = TEMPLATE(get_from, TYPE) (students, j);
        7:   23:            b = TEMPLATE(get_from, TYPE) (students, j + 1);
        -:   24:
        7:   25:            int w1 = strcmp(a.last_name, b.last_name);
        7:   26:            int w2 = strcmp(a.first_name, b.first_name);
        -:   27:
        7:   28:            if (w1 > 0 || (w1 == 0 && w2 > 0))
        -:   29:            {
        3:   30:                TEMPLATE(set_in, TYPE) (students, a, j + 1);
        3:   31:                TEMPLATE(set_in, TYPE) (students, b, j);
        -:   32:            }
        -:   33:        }
        -:   34:    }
        4:   35:}
------------------
sort_array:
        4:   15:void TEMPLATE(sort, TYPE) (IN_TYPE students, int n)
        -:   16:{
        -:   17:    struct Student a, b;
        9:   18:    for (int i = 1; i < n; i++)
        -:   19:    {
       12:   20:        for (int j = 0; j < n - i; j++)
        -:   21:        {
        7:   22:            a = TEMPLATE(get_from, TYPE) (students, j);
        7:   23:            b = TEMPLATE(get_from, TYPE) (students, j + 1);
        -:   24:
        7:   25:            int w1 = strcmp(a.last_name, b.last_name);
        7:   26:            int w2 = strcmp(a.first_name, b.first_name);
        -:   27:
        7:   28:            if (w1 > 0 || (w1 == 0 && w2 > 0))
        -:   29:            {
        3:   30:                TEMPLATE(set_in, TYPE) (students, a, j + 1);
        3:   31:                TEMPLATE(set_in, TYPE) (students, b, j);
        -:   32:            }
        -:   33:        }
        -:   34:    }
        4:   35:}
------------------
        -:   36:
        -:   37:#endif // IN_TYPE
        -:   38:#endif // TYPE
