        -:    0:Source:find_template.c
        -:    1:#include <string.h>
        -:    2:#include "common.h"
        -:    3:#include <stdio.h>
        -:    4:
        -:    5:/* Params:
        -:    6: *   TYPE - file / array
        -:    7: *   IN_TYPE - FILE * / struct Student *
        -:    8:**/
        -:    9:
        -:   10:#ifdef TYPE
        -:   11:#ifdef IN_TYPE
        -:   12:
        -:   13:#include "templates.h"
        -:   14:
        8:   15:int TEMPLATE(find, TYPE) (IN_TYPE students_in, IN_TYPE students_out, int n, char *last_name)
        -:   16:{
        -:   17:    struct Student a;
        8:   18:    int k = 0;
       26:   19:    for (int i = 0; i < n; i++)
        -:   20:    {
       18:   21:        a = TEMPLATE(get_from, TYPE) (students_in, i);
       18:   22:        if (strstr(a.last_name, last_name) == a.last_name)
        -:   23:        {
        6:   24:            TEMPLATE(set_in, TYPE) (students_out, a, k);
        6:   25:            k += 1;
        -:   26:        }
        -:   27:    }
        8:   28:    return k;
        -:   29:}
        -:   30:
        -:   31:#endif // IN_TYPE
        -:   32:#endif // TYPE
