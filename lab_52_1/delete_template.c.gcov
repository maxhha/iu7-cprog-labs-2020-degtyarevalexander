        -:    0:Source:delete_template.c
        -:    1:#include <string.h>
        -:    2:#include "common.h"
        -:    3:#include <stdio.h>
        -:    4:
        -:    5:/* Params:
        -:    6: *   TYPE - file / array
        -:    7: *   IN_TYPE - FILE * / struct s_student *
        -:    8:**/
        -:    9:
        -:   10:#ifdef TYPE
        -:   11:#ifdef IN_TYPE
        -:   12:
        -:   13:#include "templates.h"
        -:   14:
       4*:   15:int TEMPLATE(delete, TYPE) (IN_TYPE students_in, IN_TYPE students_out, int n)
        -:   16:{
        -:   17:    struct s_student a;
       4*:   18:    double sum = 0;
        -:   19:
      13*:   20:    for (int i = 0; i < n; i++)
        -:   21:    {
       9*:   22:        a = TEMPLATE(get_from, TYPE) (students_in, i);
       9*:   23:        sum += a.marks[0];
       9*:   24:        sum += a.marks[1];
       9*:   25:        sum += a.marks[2];
       9*:   26:        sum += a.marks[3];
        -:   27:    }
        -:   28:
       4*:   29:    double mean = sum / n;
       4*:   30:    int k = 0;
        -:   31:
      13*:   32:    for (int i = 0; i < n; i++)
        -:   33:    {
       9*:   34:        a = TEMPLATE(get_from, TYPE) (students_in, i);
       9*:   35:        if ((double) a.marks[0] + a.marks[1] + a.marks[2] + a.marks[3] >= mean)
        -:   36:        {
       6*:   37:            TEMPLATE(set_in, TYPE) (students_out, a, k);
       6*:   38:            k += 1;
        -:   39:        }
        -:   40:    }
        -:   41:
       4*:   42:    return k;
        -:   43:}
        -:   44:
        -:   45:#endif // IN_TYPE
        -:   46:#endif // TYPE
