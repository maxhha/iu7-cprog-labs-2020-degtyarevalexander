        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:4
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <math.h>
        -:    3:
        -:    4:#define OK 0
        -:    5:#define INPUT_ERR 1
        -:    6:#define EPSILON 1e-2
        -:    7:
        4:    8:int fequal(float a, float b)
        -:    9:{
        4:   10:    return fabs(a - b) < EPSILON;
        -:   11:}
        -:   12:
        3:   13:int is_on_segment(float x1, float y1, float x2, float y2, float xa, float ya)
        -:   14:{
        3:   15:    float dx1 = x1 - xa, dy1 = y1 - ya;
        3:   16:    float dx2 = x2 - xa, dy2 = y2 - ya;
        3:   17:    return (dx1 * dx2 + dy1 * dy2 <= EPSILON) && fabs(dx1 * dy2 - dx2 * dy1) <= EPSILON;
        -:   18:}
        -:   19:
        4:   20:int main()
        -:   21:{
        -:   22:    float x1, y1, x2, y2, xa, ya;
        -:   23:    int rc;
        -:   24:
        4:   25:    setbuf(stdout, NULL);
        4:   26:    printf("Segment and point:\n");
        -:   27:
        4:   28:    rc = scanf("%f %f %f %f %f %f", &x1, &y1, &x2, &y2, &xa, &ya);
        4:   29:    if (rc != 6 || rc == EOF || (fequal(x1, x2) && fequal(y1, y2)))
        -:   30:    {
        1:   31:        printf("no no no\n");
        1:   32:        return INPUT_ERR;
        -:   33:    }
        -:   34:
        3:   35:    printf("%d\n", is_on_segment(x1, y1, x2, y2, xa, ya));
        -:   36:
        3:   37:    return OK;
        -:   38:}
