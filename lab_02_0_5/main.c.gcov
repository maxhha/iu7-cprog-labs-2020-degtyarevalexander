        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:4
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:
        -:    3:#define MAX_ARRAY_SIZE 10
        -:    4:#define OK 0
        -:    5:#define INPUT_LEN_ERR 1
        -:    6:#define INPUT_ELEMENTS_ERR 2
        -:    7:
        4:    8:int scanf_array(int *a, int **right)
        -:    9:{
        -:   10:    int n;
        4:   11:    printf("Enter array length:\n");
        4:   12:    int rc = scanf("%d", &n);
        4:   13:    *right = a + n;
        -:   14:
        4:   15:    if (rc != 1 || n <= 0 || n > MAX_ARRAY_SIZE)
        -:   16:    {
        1:   17:        return INPUT_LEN_ERR;
        -:   18:    }
        -:   19:
        3:   20:    printf("Enter array elements:\n");
        -:   21:
        7:   22:    for (int *i = a; i < *right; i++)
        -:   23:    {
        5:   24:        rc = scanf("%d", i);
        -:   25:
        5:   26:        if (rc != 1 || rc == EOF)
        -:   27:        {
        1:   28:            return INPUT_ELEMENTS_ERR;
        -:   29:        }
        -:   30:    }
        2:   31:    return OK;
        -:   32:}
        -:   33:
        2:   34:int clever_max(int *a, int *r_a)
        -:   35:{
        2:   36:    int *l = a;
        2:   37:    int *r = r_a - 1;
        2:   38:    int max = *l + *r;
        -:   39:    int x;
        -:   40:    
        7:   41:    while (l <= r)
        -:   42:    {
        3:   43:        x = *l + *r;
        3:   44:        if (x > max)
        1:   45:            max = x;
        3:   46:        l++;
        3:   47:        r--;
        -:   48:    }
        2:   49:    return max;
        -:   50:}
        -:   51:
        4:   52:int main(void)
        -:   53:{
        -:   54:    int a[MAX_ARRAY_SIZE];
        -:   55:    int *r_a;
        -:   56:    int rc;
        -:   57:
        4:   58:    rc = scanf_array(a, &r_a);
        -:   59:
        4:   60:    if (rc == INPUT_LEN_ERR)
        -:   61:    {
        1:   62:        printf("Array size is invalid.\n");
        1:   63:        return rc;
        -:   64:    }
        3:   65:    else if (rc == INPUT_ELEMENTS_ERR)
        -:   66:    {
        1:   67:        printf("Oops! It was a bad element.\n");
        1:   68:        return rc;
        -:   69:    }
        2:   70:    else if (rc != OK)
        -:   71:    {
    #####:   72:        printf("Unknown code error %d.\n", rc);
    #####:   73:        return rc;
        -:   74:    }
        -:   75:
        2:   76:    printf("Max is %d\n", clever_max(a, r_a));
        -:   77:
        2:   78:    return OK;
        -:   79:}
